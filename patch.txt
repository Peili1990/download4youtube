diff -uprN a/content/browser/compositor/io_surface_layer_mac.mm b/content/browser/compositor/io_surface_layer_mac.mm
--- a/content/browser/compositor/io_surface_layer_mac.mm
+++ b/content/browser/compositor/io_surface_layer_mac.mm
@@ -8,6 +8,7 @@
 #include <OpenGL/CGLIOSurface.h>
 #include <OpenGL/CGLRenderers.h>
 #include <OpenGL/gl.h>
+#include <OpenGL/gl.h>
 #include <OpenGL/OpenGL.h>
 
 #include "base/debug/trace_event.h"
@@ -18,6 +19,7 @@
 #include "ui/base/cocoa/animation_utils.h"
 #include "ui/gfx/size_conversions.h"
 #include "ui/gl/gpu_switching_manager.h"
+#include "ui/gl/scoped_cgl.h"
 
 ////////////////////////////////////////////////////////////////////////////////
 // IOSurfaceLayerHelper
Binary files a/extensions/browser/api/widget/.DS_Store and b/extensions/browser/api/widget/.DS_Store differ
diff -uprN a/extensions/browser/api/widget/widget_api.cc b/extensions/browser/api/widget/widget_api.cc
--- /dev/null	
+++ b/extensions/browser/api/widget/widget_api.cc	
@@ -0,0 +1,49 @@
+// Copyright 2014 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "extensions/browser/api/widget/widget_api.h"
+
+#include "base/sys_info.h"
+#include "chrome/browser/ui/browser.h"
+#include "chrome/browser/ui/browser_list.h"
+#include "chrome/browser/ui/tabs/tab_strip_model.h"
+#include <string>
+
+namespace extensions {
+
+WidgetGetYoutubeLinksFunction::WidgetGetYoutubeLinksFunction() {
+}
+
+WidgetGetYoutubeLinksFunction::~WidgetGetYoutubeLinksFunction() {
+}
+
+    AsyncExtensionFunction::ResponseAction WidgetGetYoutubeLinksFunction::Run() {
+        // create browser_list_ret for return
+        base::ListValue* youtube_list_ret = new base::ListValue();
+        
+        // get the window list from BrowserList::GetInstance
+        BrowserList* list = BrowserList::GetInstance(chrome::HOST_DESKTOP_TYPE_FIRST);
+        
+        // traverse the list and add to browser_list_ret
+        for(unsigned long i = 0; i < list->size(); i ++) {
+            // get tab strip model that contains all the tabs
+            TabStripModel* model = list->get(i)->tab_strip_model();
+            
+            for(int j = 0; j < model->count(); j ++) {
+                content::WebContents* tab = model->GetWebContentsAt(j);
+                
+                base::DictionaryValue* result = new base::DictionaryValue();
+                result->SetString("title", tab->GetTitle());
+                result->SetString("url", tab->GetLastCommittedURL().spec());
+                result->SetString("data", "");
+                
+                if(tab->GetLastCommittedURL().spec().find("https://www.youtube.com/watch?v=") == 0) {
+                    youtube_list_ret->Append(result);
+                }
+            }
+        }
+        
+        return RespondNow(OneArgument(youtube_list_ret));
+    }
+}  // namespace extensions
diff -uprN a/extensions/browser/api/widget/widget_api.h b/extensions/browser/api/widget/widget_api.h
--- /dev/null	
+++ b/extensions/browser/api/widget/widget_api.h	
@@ -0,0 +1,26 @@
+// Copyright 2014 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef EXTENSIONS_BROWSER_API_WIDGET_WIDGET_API_H_
+#define EXTENSIONS_BROWSER_API_WIDGET_WIDGET_API_H_
+
+#include "chrome/browser/extensions/chrome_extension_function.h"
+#include "extensions/browser/extension_function.h"
+#include "extensions/common/api/widget.h"
+
+namespace extensions {
+
+class WidgetGetYoutubeLinksFunction : public ChromeUIThreadExtensionFunction {
+ public:
+  DECLARE_EXTENSION_FUNCTION("widget.getYoutubeLinks", WIDGET_GETYOUTUBELINKS)
+  WidgetGetYoutubeLinksFunction();
+
+ private:
+  virtual ~WidgetGetYoutubeLinksFunction();
+  virtual AsyncExtensionFunction::ResponseAction Run() override;
+};
+
+}  // namespace extensions
+
+#endif  // EXTENSIONS_BROWSER_API_WIDGET_WIDGET_API_H_
diff -uprN a/extensions/browser/extension_function_histogram_value.h b/extensions/browser/extension_function_histogram_value.h
--- a/extensions/browser/extension_function_histogram_value.h	
+++ b/extensions/browser/extension_function_histogram_value.h	
@@ -956,7 +956,8 @@ enum HistogramValue {
   WEBVIEWINTERNAL_SETALLOWTRANSPARENCY,
   EASYUNLOCKPRIVATE_GETUSERINFO,
   HOTWORDPRIVATE_GETLAUNCHSTATE, 
   HOTWORDPRIVATE_SETHOTWORDALWAYSONSEARCHENABLED,
+  WIDGET_GETYOUTUBELINKS,  
   WEBVIEWINTERNAL_LOADDATAWITHBASEURL,
   GUESTVIEWINTERNAL_DESTROYGUEST,
   COPRESENCESOCKET_CREATEPEER,
diff -uprN a/extensions/common/api/_api_features.json b/extensions/common/api/_api_features.json
--- a/extensions/common/api/_api_features.json	
+++ b/extensions/common/api/_api_features.json	
@@ -354,5 +354,9 @@
     "channel": "stable",
     "contexts": ["webui"],
     "matches": ["chrome://chrome-signin/*"]
-  }]
+  }],
+  "widget": {
+     "dependencies": ["permission:widget"],
+     "contexts": ["blessed_extension"]
+    }
 }
diff -uprN a/extensions/common/api/_permission_features.json b/extensions/common/api/_permission_features.json
--- a/extensions/common/api/_permission_features.json	
+++ b/extensions/common/api/_permission_features.json	
@@ -349,5 +349,9 @@
     "channel": "stable",
     "extension_types": ["extension", "legacy_packaged_app"]
     }
-  ]
+  ],
+    "widget": {
+      "channel": "dev",
+      "extension_types": ["extension", "platform_app"]
+    }
 }
diff -uprN a/extensions/common/api/schemas.gypi b/extensions/common/api/schemas.gypi
--- a/extensions/common/api/schemas.gypi	
+++ b/extensions/common/api/schemas.gypi	
@@ -46,6 +46,7 @@
       'virtual_keyboard_private.json',
       'web_request.json',
       'web_view_internal.json',
+      'widget.idl',
     ],
     # ChromeOS-specific schemas.
     'chromeos_schema_files': [
diff -uprN a/extensions/common/api/widget.idl b/extensions/common/api/widget.idl
--- a/extensions/common/api/widget.idl	
+++ b/extensions/common/api/widget.idl	
@@ -0,0 +1,19 @@
+// Copyright 2014 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+// Use the <code>chrome.widget</code> API to query whatever.
+namespace widget {
+
+ dictionary Window {
+   DOMString title;
+   DOMString url;
+   DOMString data;
+   };
+
+   callback WindowCallback = void (Window[] windows);
+
+   interface Functions {
+   static void getYoutubeLinks(WindowCallback callback);
+  };
+};
\ No newline at end of file
diff -uprN a/extensions/common/permissions/api_permission.h b/extensions/common/permissions/api_permission.h
--- a/extensions/common/permissions/api_permission.h	
+++ b/extensions/common/permissions/api_permission.h	
@@ -186,6 +186,7 @@ class APIPermission {
     kWebrtcLoggingPrivate,
     kWebstorePrivate,
     kWebView,
+    kWidget,
     kWindowShape,
     kScreenlockPrivate,
     kSystemCpu,
diff -uprN a/extensions/common/permissions/extensions_api_permissions.cc b/extensions/common/permissions/extensions_api_permissions.cc
--- a/extensions/common/permissions/extensions_api_permissions.cc	
+++ b/extensions/common/permissions/extensions_api_permissions.cc	
@@ -34,6 +34,7 @@ std::vector<APIPermissionInfo*> Extensio
       {APIPermission::kAlwaysOnTopWindows, "app.window.alwaysOnTop"},
       {APIPermission::kAppView, "appview",
         APIPermissionInfo::kFlagCannotBeOptional},
+      {APIPermission::kWidget, "widget"},
       {APIPermission::kAudioCapture, "audioCapture",
        APIPermissionInfo::kFlagNone, IDS_EXTENSION_PROMPT_WARNING_AUDIO_CAPTURE,
        PermissionMessage::kAudioCapture},
diff -uprN a/extensions/extensions.gyp b/extensions/extensions.gyp
--- a/extensions/extensions.gyp	
+++ b/extensions/extensions.gyp	
@@ -513,6 +513,8 @@
         'browser/api/system_storage/storage_info_provider.h',
         'browser/api/system_storage/system_storage_api.cc',
         'browser/api/system_storage/system_storage_api.h',
+        'browser/api/widget/widget_api.cc',
+        'browser/api/widget/widget_api.h',
         'browser/api/test/test_api.cc',
         'browser/api/test/test_api.h',
         'browser/api/usb/usb_api.cc',